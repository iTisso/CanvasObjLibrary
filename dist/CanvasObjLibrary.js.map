{"version":3,"sources":["../../../../../node_modules/browser-pack/_prelude.js","../lib/Mat/Mat.js","../lib/promise/promise.js","../lib/setImmediate/setImmediate.js","CanvasObjLibrary.js","index.js","../../../../../node_modules/process/browser.js"],"names":[],"mappings":"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":"CanvasObjLibrary.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\nCopyright luojia@luojia.me\nLGPL license\n*/\n'use strict';\n\n(function(f){\n\tif (typeof define === \"function\" && define.amd) {\n\t    define(f);\n\t}else if (typeof exports === \"object\") {\n\t    module.exports = f();\n\t}else {\n\t    (0,eval)('this').Mat = f();\n\t}\n})(function(){\nconst global= (0,eval)('this');\nconst TypedArray=global.Float32Array&&global.Float32Array.prototype;\n\nfunction createClass(Constructor){\n\tclass Matrix{\n\t\tget length(){return this._len;}\n\t\tstatic leftMultiply(m){\n\t\t\treturn this.set(Mat.multiply(m,this,Mat.Matrixes.T3));\n\t\t}\n\t\tstatic rightMultiply(m){\n\t\t\treturn this.set(Mat.multiply(this,m,Mat.Matrixes.T3));\n\t\t}\n\t\tstatic fill(n){\n\t\t\targuments.length||(n=0);\n\t\t\tfor(let i=this.length;i--;)this[i]=n;\n\t\t\treturn this;\n\t\t}\n\t\tstatic set(arr,offset){\n\t\t\toffset||(offset=0);\n\t\t\tfor(let i=(arr.length+offset)<=this.length?arr.length:(this.length-offset);i--;)\n\t\t\t\tthis[offset+i]=arr[i];\n\t\t\treturn this;\n\t\t}\n\t\tstatic put(m,row,column){\n\t\t\tMat.put(this,m,row||0,column||0);\n\t\t\treturn this;\n\t\t}\n\t\tstatic rotate2d(t){\n\t\t\treturn this.set(Mat.rotate2d(this,t,Mat.Matrixes.T3));\n\t\t}\n\t\tstatic translate2d(x,y){\n\t\t\treturn this.set(Mat.translate2d(this,x,y,Mat.Matrixes.T3));\n\t\t}\n\t\tstatic scale2d(x,y){\n\t\t\treturn this.set(Mat.scale2d(this,x,y,Mat.Matrixes.T3));\n\t\t}\n\t\tstatic rotate3d(tx,ty,tz){\n\t\t\treturn this.set(Mat.rotate3d(this,tx,ty,tz,Mat.Matrixes.T4));\n\t\t}\n\t\tstatic scale3d(x,y,z){\n\t\t\treturn this.set(Mat.scale3d(this,x,y,z,Mat.Matrixes.T4));\n\t\t}\n\t\tstatic translate3d(x,y,z){\n\t\t\treturn this.set(Mat.translate3d(this,x,y,z,Mat.Matrixes.T4));\n\t\t}\n\t\tstatic rotateX(t){\n\t\t\treturn this.set(Mat.rotateX(this,t,Mat.Matrixes.T4));\n\t\t}\n\t\tstatic rotateY(t){\n\t\t\treturn this.set(Mat.rotateY(this,t,Mat.Matrixes.T4));\n\t\t}\n\t\tstatic rotateZ(t){\n\t\t\treturn this.set(Mat.rotateZ(this,t,Mat.Matrixes.T4));\n\t\t}\n\t\tstatic clone(){\n\t\t\treturn Mat(this.row,this.column).set(this);\n\t\t}\n\t\tstatic toString(){\n\t\t\tif(this.length === 0)return '';\n\t\t\tfor(var i=0,lines=[],tmp=[];i<this.length;i++){\n\t\t\t\tif(i && (i%this.column === 0)){\n\t\t\t\t\tlines.push(tmp.join('\\t'));\n\t\t\t\t\ttmp.length=0;\n\t\t\t\t}\n\t\t\t\ttmp.push(this[i]||0);\n\t\t\t}\n\t\t\tlines.push(tmp.join('\t'));\n\t\t\treturn lines.join('\\n');\n\t\t}\n\t}\n\tclass staticMethods{\n\t\t//static methods\n\t\tstatic Identity(n){//return a new Identity Matrix\n\t\t\tlet m=Mat(n,n,0);\n\t\t\tfor(let i=n;i--;)m[i*n+i]=1;\n\t\t\treturn m;\n\t\t}\n\t\tstatic multiply(a,b,result){\n\t\t\tif(a.column!==b.row)throw('wrong matrix');\n\t\t\tlet row=a.row,column=Math.min(a.column,b.column),r=result||Mat(row,column),c,i,ind;\n\t\t\tfor(let l=row;l--;){\n\t\t\t\tfor(c=column;c--;){\n\t\t\t\t\tr[ind=(l*r.column+c)]=0;\n\t\t\t\t\tfor(i=a.column;i--;){\n\t\t\t\t\t\tr[ind]+=(a[l*a.column+i]*b[c+i*b.column]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn r;\n\t\t}\n\t\tstatic multiplyString(a,b,array,ignoreZero=true){//work out the equation for every elements,only for debug and only works with Array matrixes\n\t\t\tif(a.column!==b.row)throw('wrong matrix');\n\t\t\tvar r=array||Mat(a.row,b.column),l,c,i,ind;\n\t\t\tfor(l=a.row;l--;){\n\t\t\t\tfor(c=b.column;c--;){\n\t\t\t\t\tr[ind=(l*b.column+c)]='';\n\t\t\t\t\tfor(i=0;i<a.column;i++){\n\t\t\t\t\t\tif(ignoreZero && (a[l*a.column+i]==0 ||b[c+i*b.column]==0))continue;\n\t\t\t\t\t\tr[ind]+=(((i&&r[ind])?'+':'')+'('+a[l*a.column+i]+')*('+b[c+i*b.column])+')';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn r;\n\t\t}\n\t\tstatic add(a,b,result){\n\t\t\tif(a.column!==b.column || a.row!==b.row)throw('wrong matrix');\n\t\t\tlet r=result||Mat(a.row,b.column);\n\t\t\tfor(let i=a.length;i--;)r[i]=a[i]+b[i];\n\t\t\treturn r;\n\t\t}\n\t\tstatic minus(a,b,result){\n\t\t\tif(a.column!==b.column || a.row!==b.row)throw('wrong matrix');\n\t\t\tlet r=result||Mat(a.row,b.column);\n\t\t\tfor(let i=a.length;i--;)r[i]=a[i]-b[i];\n\t\t\treturn r;\n\t\t}\n\t\tstatic rotate2d(m,t,result){\n\t\t\tconst Mr=Mat.Matrixes.rotate2d;\n\t\t\tMr[0]=Mr[4]=Math.cos(t);\n\t\t\tMr[1]=-(Mr[3]=Math.sin(t));\n\t\t\treturn Mat.multiply(Mr,m,result||Mat(3,3));\n\t\t}\n\t\tstatic scale2d(m,x,y,result){\n\t\t\tconst Mr=Mat.Matrixes.scale2d;\n\t\t\tMr[0]=x;\n\t\t\tMr[4]=y;\n\t\t\treturn Mat.multiply(Mr,m,result||Mat(3,3));\n\t\t}\n\t\tstatic translate2d(m,x,y,result){\n\t\t\tconst Mr=Mat.Matrixes.translate2d;\n\t\t\tMr[2]=x;\n\t\t\tMr[5]=y;\n\t\t\treturn Mat.multiply(Mr,m,result||Mat(3,3));\n\t\t}\n\t\tstatic rotate3d(m,tx,ty,tz,result){\n\t\t\tconst Xc=Math.cos(tx),Xs=Math.sin(tx),\n\t\t\t\tYc=Math.cos(ty),Ys=Math.sin(ty),\n\t\t\t\tZc=Math.cos(tz),Zs=Math.sin(tz),\n\t\t\t\tMr=Mat.Matrixes.rotate3d;\n\t\t\tMr[0]=Zc*Yc;\n\t\t\tMr[1]=Zc*Ys*Xs-Zs*Xc;\n\t\t\tMr[2]=Zc*Ys*Xc+Zs*Xs;\n\t\t\tMr[4]=Zs*Yc;\n\t\t\tMr[5]=Zs*Ys*Xs+Zc*Xc;\n\t\t\tMr[6]=Zs*Ys*Xc-Zc*Xs;\n\t\t\tMr[8]=-Ys;\n\t\t\tMr[9]=Yc*Xs;\n\t\t\tMr[10]=Yc*Xc;\n\t\t\treturn Mat.multiply(Mr,m,result||Mat(4,4));\n\t\t}\n\t\tstatic rotateX(m,t,result){\n\t\t\tconst Mr=Mat.Matrixes.rotateX;\n\t\t\tMr[10]=Mr[5]=Math.cos(t);\n\t\t\tMr[6]=-(Mr[9]=Math.sin(t));\n\t\t\treturn Mat.multiply(Mr,m,result||Mat(4,4));\n\t\t}\n\t\tstatic rotateY(m,t,result){\n\t\t\tconst Mr=Mat.Matrixes.rotateY;\n\t\t\tMr[10]=Mr[0]=Math.cos(t);\n\t\t\tMr[8]=-(Mr[2]=Math.sin(t));\n\t\t\treturn Mat.multiply(Mr,m,result||Mat(4,4));\n\t\t}\n\t\tstatic rotateZ(m,t,result){\n\t\t\tconst Mr=Mat.Matrixes.rotateZ;\n\t\t\tMr[5]=Mr[0]=Math.cos(t);\n\t\t\tMr[1]=-(Mr[4]=Math.sin(t));\n\t\t\treturn Mat.multiply(Mr,m,result||Mat(4,4));\n\t\t}\n\t\tstatic scale3d(m,x,y,z,result){\n\t\t\tconst Mr=Mat.Matrixes.scale3d;\n\t\t\tMr[0]=x;\n\t\t\tMr[5]=y;\n\t\t\tMr[10]=z;\n\t\t\treturn Mat.multiply(Mr,m,result||Mat(4,4));\n\t\t}\n\t\tstatic translate3d(m,x,y,z,result){\n\t\t\tconst Mr=Mat.Matrixes.translate3d;\n\t\t\tMr[12]=x;\n\t\t\tMr[13]=y;\n\t\t\tMr[14]=z;\n\t\t\treturn Mat.multiply(Mr,m,result||Mat(4,4));\n\t\t}\n\t\tstatic put(m,sub,row,column){\n\t\t\tlet c,ind,i;\n\t\t\trow||(row=0);\n\t\t\tcolumn||(column=0);\n\t\t\tfor(let l=sub.row;l--;){\n\t\t\t\tif(l+row>=m.row)continue;\n\t\t\t\tfor(c=sub.column;c--;){\n\t\t\t\t\tif(c+column>=m.column)continue;\n\t\t\t\t\tm[(l+row)*m.column+c+column]=sub[l*sub.column+c];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tstatic createClass(Constructor){\n\t\t\treturn createClass(Constructor);\n\t\t}\n\t}\n\tvar testArray=new Constructor(1);\n\tObject.defineProperty(Matrix,'_instanceofTypedArray',{value:!!(TypedArray&&TypedArray.isPrototypeOf(testArray))});\n\ttestArray=null;\n\n\tObject.setPrototypeOf(Matrix,Constructor.prototype);\n\tfunction Mat(l,c,fill){\n\t\tconst M=new Constructor(l*c);\n\t\tObject.setPrototypeOf(M,Matrix);\n\t\tObject.defineProperty(M,'length',{value:l*c});\n\t\tObject.defineProperty(M,'row',{value:l});\n\t\tObject.defineProperty(M,'column',{value:c});\n\t\tif(arguments.length>=3){\n\t\t\tif(Matrix._instanceofTypedArray&&(fill===0)){}\n\t\t\telse if(typeof fill === 'number'){\n\t\t\t\tM.fill(fill);\n\t\t\t}else if(fill.length){\n\t\t\t\tM.set(fill);\n\t\t\t}\n\t\t}\n\t\treturn M;\n\t}\n\tObject.setPrototypeOf(Mat,staticMethods);\n\tMat.Matrixes={//do not modify these matrixes manually and dont use them\n\t\tI3:Mat.Identity(3),\n\t\tI4:Mat.Identity(4),\n\t\tT3:Mat(3,3,0),\n\t\tT4:Mat(4,4,0),\n\t\trotate2d:Mat.Identity(3),\n\t\ttranslate2d:Mat.Identity(3),\n\t\tscale2d:Mat.Identity(3),\n\t\ttranslate3d:Mat.Identity(4),\n\t\trotate3d:Mat.Identity(4),\n\t\trotateX:Mat.Identity(4),\n\t\trotateY:Mat.Identity(4),\n\t\trotateZ:Mat.Identity(4),\n\t\tscale3d:Mat.Identity(4),\n\t}\n\treturn Mat;\n}\nreturn createClass(global.Float32Array?Float32Array:Array);\n});\n","(function (root) {\n\n  // Store setTimeout reference so promise-polyfill will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var setTimeoutFunc = setTimeout;\n\n  function noop() {}\n  \n  // Polyfill for Function.prototype.bind\n  function bind(fn, thisArg) {\n    return function () {\n      fn.apply(thisArg, arguments);\n    };\n  }\n\n  function Promise(fn) {\n    if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');\n    if (typeof fn !== 'function') throw new TypeError('not a function');\n    this._state = 0;\n    this._handled = false;\n    this._value = undefined;\n    this._deferreds = [];\n\n    doResolve(fn, this);\n  }\n\n  function handle(self, deferred) {\n    while (self._state === 3) {\n      self = self._value;\n    }\n    if (self._state === 0) {\n      self._deferreds.push(deferred);\n      return;\n    }\n    self._handled = true;\n    Promise._immediateFn(function () {\n      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n      if (cb === null) {\n        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n        return;\n      }\n      var ret;\n      try {\n        ret = cb(self._value);\n      } catch (e) {\n        reject(deferred.promise, e);\n        return;\n      }\n      resolve(deferred.promise, ret);\n    });\n  }\n\n  function resolve(self, newValue) {\n    try {\n      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n        var then = newValue.then;\n        if (newValue instanceof Promise) {\n          self._state = 3;\n          self._value = newValue;\n          finale(self);\n          return;\n        } else if (typeof then === 'function') {\n          doResolve(bind(then, newValue), self);\n          return;\n        }\n      }\n      self._state = 1;\n      self._value = newValue;\n      finale(self);\n    } catch (e) {\n      reject(self, e);\n    }\n  }\n\n  function reject(self, newValue) {\n    self._state = 2;\n    self._value = newValue;\n    finale(self);\n  }\n\n  function finale(self) {\n    if (self._state === 2 && self._deferreds.length === 0) {\n      Promise._immediateFn(function() {\n        if (!self._handled) {\n          Promise._unhandledRejectionFn(self._value);\n        }\n      });\n    }\n\n    for (var i = 0, len = self._deferreds.length; i < len; i++) {\n      handle(self, self._deferreds[i]);\n    }\n    self._deferreds = null;\n  }\n\n  function Handler(onFulfilled, onRejected, promise) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.promise = promise;\n  }\n\n  /**\n   * Take a potentially misbehaving resolver function and make sure\n   * onFulfilled and onRejected are only called once.\n   *\n   * Makes no guarantees about asynchrony.\n   */\n  function doResolve(fn, self) {\n    var done = false;\n    try {\n      fn(function (value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      }, function (reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      });\n    } catch (ex) {\n      if (done) return;\n      done = true;\n      reject(self, ex);\n    }\n  }\n\n  Promise.prototype['catch'] = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n\n  Promise.prototype.then = function (onFulfilled, onRejected) {\n    var prom = new (this.constructor)(noop);\n\n    handle(this, new Handler(onFulfilled, onRejected, prom));\n    return prom;\n  };\n\n  Promise.all = function (arr) {\n    var args = Array.prototype.slice.call(arr);\n\n    return new Promise(function (resolve, reject) {\n      if (args.length === 0) return resolve([]);\n      var remaining = args.length;\n\n      function res(i, val) {\n        try {\n          if (val && (typeof val === 'object' || typeof val === 'function')) {\n            var then = val.then;\n            if (typeof then === 'function') {\n              then.call(val, function (val) {\n                res(i, val);\n              }, reject);\n              return;\n            }\n          }\n          args[i] = val;\n          if (--remaining === 0) {\n            resolve(args);\n          }\n        } catch (ex) {\n          reject(ex);\n        }\n      }\n\n      for (var i = 0; i < args.length; i++) {\n        res(i, args[i]);\n      }\n    });\n  };\n\n  Promise.resolve = function (value) {\n    if (value && typeof value === 'object' && value.constructor === Promise) {\n      return value;\n    }\n\n    return new Promise(function (resolve) {\n      resolve(value);\n    });\n  };\n\n  Promise.reject = function (value) {\n    return new Promise(function (resolve, reject) {\n      reject(value);\n    });\n  };\n\n  Promise.race = function (values) {\n    return new Promise(function (resolve, reject) {\n      for (var i = 0, len = values.length; i < len; i++) {\n        values[i].then(resolve, reject);\n      }\n    });\n  };\n\n  // Use polyfill for setImmediate for performance gains\n  Promise._immediateFn = (typeof setImmediate === 'function' && function (fn) { setImmediate(fn); }) ||\n    function (fn) {\n      setTimeoutFunc(fn, 0);\n    };\n\n  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n    if (typeof console !== 'undefined' && console) {\n      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n    }\n  };\n\n  /**\n   * Set the immediate function to execute callbacks\n   * @param fn {function} Function to execute\n   * @deprecated\n   */\n  Promise._setImmediateFn = function _setImmediateFn(fn) {\n    Promise._immediateFn = fn;\n  };\n\n  /**\n   * Change the function to execute on unhandled rejection\n   * @param {function} fn Function to execute on unhandled rejection\n   * @deprecated\n   */\n  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\n    Promise._unhandledRejectionFn = fn;\n  };\n  \n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = Promise;\n  } else if (!root.Promise) {\n    root.Promise = Promise;\n  }\n\n})(this);\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","/*\nMIT LICENSE\nCopyright (c) 2016 iTisso\nhttps://github.com/iTisso/CanvasObjLibrary\nvarsion:2.0\n*/\n'use strict';\nimport '../lib/setImmediate/setImmediate.js'\nimport Promise from '../lib/promise/promise.js'\nimport Mat from '../lib/Mat/Mat.js'\n\nif (!window.Promise)window.Promise = Promise;\n\nconst defProp=Object.defineProperty;\n\n\n//class:CanvasObjLibrary\nclass CanvasObjLibrary{\n\tconstructor(canvas){\n\t\tif(canvas instanceof HTMLCanvasElement === false)\n\t\t\tthrow(new TypeError('canvas required'));\n\t\tconst COL=this;\n\t\tObject.assign(this,{\n\t\t\t/*The main canvas*/\n\t\t\tcanvas,\n\t\t\t/*Canvas' context*/\n\t\t\tcontext: canvas.getContext('2d'),\n\t\t\tMatrix:Mat,\n\t\t\tdefault:{\n\t\t\t\t/*default font*/\n\t\t\t\tfont:{\n\t\t\t\t\tfontStyle: null,\n\t\t\t\t\tfontWeight: null,\n\t\t\t\t\tfontVariant: null,\n\t\t\t\t\tcolor: \"#000\",\n\t\t\t\t\ttextAlign:'start',//left right center start end\n\t\t\t\t\tlineHeight: null,\n\t\t\t\t\tfontSize: 14,\n\t\t\t\t\tfontFamily: \"Arial\",\n\t\t\t\t\tstrokeWidth: 0,\n\t\t\t\t\tstrokeColor: \"#000\",\n\t\t\t\t\tshadowBlur: 0,\n\t\t\t\t\tshadowColor: \"#000\",\n\t\t\t\t\tshadowOffsetX:0,\n\t\t\t\t\tshadowOffsetY:0,\n\t\t\t\t\tfill:true,\n\t\t\t\t\treverse:false,\n\t\t\t\t\t//vertical:false,//abandoned\n\t\t\t\t\t//textBaseline: \"middle\",//abandoned\n\t\t\t\t},\n\t\t\t\tstyle:{\n\t\t\t\t\tPOSITIONMATRIX:0x1,\n\t\t\t\t\tROTATEMATRIX:0x10,\n\t\t\t\t\tZOOMMATRIX:0x100,\n\t\t\t\t\twidth:1,\n\t\t\t\t\theight:1,\n\t\t\t\t\thidden:false,\n\t\t\t\t\topacity:1,\n\t\t\t\t\tclipOverflow:false,\n\t\t\t\t\tbackgroundColor:null,\n\t\t\t\t\tcomposite:null,\n\t\t\t\t\tdebugBorderColor:'black',\n\t\t\t\t\tx:0,\n\t\t\t\t\ty:0,\n\t\t\t\t\tpositionPointX:0,\n\t\t\t\t\tpositionPointY:0,\n\t\t\t\t\tzoomX:1,\n\t\t\t\t\tzoomY:1,\n\t\t\t\t\tzoomPointX:0,\n\t\t\t\t\tzoomPointY:0,\n\t\t\t\t\trotate:0,\n\t\t\t\t\trotatePointX:0,\n\t\t\t\t\trotatePointY:0,\n\t\t\t\t\t_translateMat:Mat.Identity(3),\n\t\t\t\t\t_tempMat:Mat.Identity(3),\n\t\t\t\t},\n\t\t\t},\n\t\t\tstat:{\n\t\t\t\tmouse:{\n\t\t\t\t\tx:null,\n\t\t\t\t\ty:null,\n\t\t\t\t\tpreviousX:null,\n\t\t\t\t\tpreviousY:null,\n\t\t\t\t},\n\t\t\t\t/*The currently focused on obj*/\n\t\t\t\tonfocus: null,\n\t\t\t\t/*The currently mouseover obj*/\n\t\t\t\tonover: null,\n\t\t\t\tcanvasOnFocus: false,\n\t\t\t\tcanvasOnover: false,\n\n\t\t\t},\n\t\t\ttmp:{\n\t\t\t\tgraphID:0,\n\t\t\t\tonOverGraph:null,\n\t\t\t\ttoClickGraph:null,\n\t\t\t\t/*matrix2:new Float32Array([1,0,0,0,1,0]),\n\t\t\t\tmatrix3:new Float32Array([1,0,0,0,1,0]),*/\n\t\t\t},\n\t\t\t\n\t\t\troot: null,//root Graph\n\n\t\t\tclass:{},\n\n\t\t\tautoClear:true,\n\t\t\t//Debug info\n\t\t\tdebug:{\n\t\t\t\tswitch:false,\n\t\t\t\tcount:0,\n\t\t\t\tframe:0,\n\t\t\t\tFPS:0,\n\t\t\t\t_lastFrameTime:Date.now(),\n\t\t\t\ton:function(){\n\t\t\t\t\tthis.switch=true;\n\t\t\t\t},\n\t\t\t\toff:function(){\n\t\t\t\t\tthis.switch=false;\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t\t//set classes\n\t\tfor(let c in COL_Class)this.class[c]=COL_Class[c](this);\n\n\t\t//init root graph\n\t\tthis.root=new this.class.FunctionGraph();\n\t\tthis.root.name='root';\n\t\t//prevent root's parentNode being modified\n\t\tdefProp(this.root,'parentNode',{configurable:false});\n\n\t\t//adjust canvas drawing size\n\t\tthis.adjustCanvas();\n\n\t\t//const canvas=this.canvas;\n\t\t//add events\n\t\taddEvents(canvas,{\n\t\t\tmouseout:e=>{\n\t\t\t\tthis.stat.canvasOnover=false;\n\t\t\t\t//clear mouse pos data\n\t\t\t\tthis.stat.mouse.x=null;\n\t\t\t\tthis.stat.mouse.y=null;\n\t\t\t\t//clear onover obj\n\t\t\t\tconst onover=this.stat.onover;\n\t\t\t\tthis._commonEventHandle(e);\n\t\t\t\tthis.stat.onover=null;\n\t\t\t},\n\t\t\tmouseover:e=>{\n\t\t\t\tthis.stat.canvasOnover=true;\n\t\t\t},\n\t\t\tmousemove:e=>{\n\t\t\t\tthis.tmp.toClick=false;\n\t\t\t\tthis._commonEventHandle(e)\n\t\t\t},\n\t\t\tmousedown:e=>{\n\t\t\t\tthis.tmp.toClickGraph=this.stat.onover;\n\t\t\t\tthis.stat.canvasOnFocus=true;\n\t\t\t\tthis.stat.onfocus=this.stat.onover;\n\t\t\t\tthis._commonEventHandle(e)\n\t\t\t},\n\t\t\tmouseup:e=>this._commonEventHandle(e),\n\t\t\tclick:e=>{\n\t\t\t\tif(this.tmp.toClickGraph)\n\t\t\t\t\tthis._commonEventHandle(e)\n\t\t\t},\n\t\t\tdblclick:e=>this._commonEventHandle(e),\n\t\t\tselectstart:e=>e.preventDefault(),\n\t\t\twheel:e=>{\n\t\t\t\tconst ce=new this.class.WheelEvent('wheel');\n\t\t\t\tce.origin=e;\n\t\t\t\t(this.stat.onover||this.root).emit(ce);\n\t\t\t},\n\t\t});\n\t\taddEvents(document,{\n\t\t\tmousedown:e=>{\n\t\t\t\tif(e.target!==this.canvas){this.stat.canvasOnFocus=false;}\n\t\t\t},\n\t\t\tmouseout:e=>{\n\t\t\t\tif(this.stat.mouse.x !== null){\n\t\t\t\t\tconst eve=new window.MouseEvent('mouseout');\n\t\t\t\t\tthis.canvas.dispatchEvent(eve);\n\t\t\t\t}\n\t\t\t},\n\t\t\tkeydown:e=>this._commonEventHandle(e),\n\t\t\tkeyup:e=>this._commonEventHandle(e),\n\t\t\tkeypress:e=>this._commonEventHandle(e),\n\n\t\t});\n\t}\n\tgenerateGraphID(){return ++this.tmp.graphID;}\n\tadjustCanvas(width=this.canvas.offsetWidth,height=this.canvas.offsetHeight){\n\t\tthis.root.style.width =this.canvas.width= width;\n\t\tthis.root.style.height =this.canvas.height= height;\n\t\tconst ce=new this.class.Event('resize');\n\t\tthis.root.emit(ce);\n\t}\n\t_commonEventHandle(e){\n\t\tif(e instanceof MouseEvent){\n\t\t\tthis.stat.previousX=this.stat.mouse.x;\n\t\t\tthis.stat.previousY=this.stat.mouse.y;\n\t\t\tif(e.type==='mouseout'){\n\t\t\t\tthis.stat.mouse.x=null;\n\t\t\t\tthis.stat.mouse.y=null;\n\t\t\t}else{\n\t\t\t\tthis.stat.mouse.x=e.layerX;\n\t\t\t\tthis.stat.mouse.y=e.layerY;\n\t\t\t}\n\t\t\tconst ce=new this.class.MouseEvent(e.type);\n\t\t\tce.origin=e;\n\t\t\t(this.stat.onover||this.root).emit(ce);\n\t\t}else if(e instanceof KeyboardEvent){\n\t\t\tif(!this.stat.canvasOnFocus)return;\n\t\t\tconst ce=new this.class.KeyboardEvent(e.type);\n\t\t\tce.origin=e;\n\t\t\t(this.stat.onfocus||this.root).emit(ce);\n\t\t}\n\t}\n\tclear(){\n\t\tthis.context.clearRect(0,0,this.canvas.width,this.canvas.height);\n\t}\n\tdraw(){\n\t\tthis.debug.count=0;\n\t\tthis.debug.frame++;\n\t\tthis.autoClear&&this.clear();\n\t\tthis.traverseGraphTree(0);\n\t\tthis.debug.switch&&this.drawDebug();\n\t}\n\t/*\n\t\ttraverse mode\n\t\t\t0\tdraw graphs and check onover graph\n\t\t\t1\tcheck onover graph\n\t*/\n\ttraverseGraphTree(mode=0){\n\t\tthis.context.setTransform(1,0,0,1,0,0);\n\t\tthis.drawGraph(this.root,mode);\n\t\tconst oldOnover=this.stat.onover;\n\t\tif(this.tmp.onOverGraph!==oldOnover){//new onover graph\n\t\t\tthis.tmp.toClickGraph=null;\n\t\t\tthis.stat.onover=this.tmp.onOverGraph;\n\t\t\tif(oldOnover)oldOnover.emit(new this.class.MouseEvent('mouseout'));\n\t\t\tif(this.stat.onover)this.stat.onover.emit(new this.class.MouseEvent('mouseover'));\n\t\t}\n\t\tthis.tmp.onOverGraph=null;\n\t}\n\tdrawDebug(){\n\t\tconst ct=this.context,d=this.debug,s=this.stat,n=Date.now(),x=this.stat.mouse.x,y=this.stat.mouse.y;\n\t\t//fps\n\t\td.FPS=(1000/(n-d._lastFrameTime)+0.5)|0;\n\t\td._lastFrameTime=n;\n\t\t//draw\n\t\tct.save();\n\t\tct.beginPath();\n\t\tct.setTransform(1, 0, 0, 1, 0, 0);\n\t\tct.font = \"16px Arial\";\n\t\tct.textBaseline = \"bottom\";\n\t\tct.globalCompositeOperation = \"lighter\";\n\t\tct.fillStyle = \"red\";\n\t\tct.fillText(\"point:\" + String(x) + \",\" + String(y) + \" FPS:\" + d.FPS + \" Items:\" + d.count+\" Frame:\"+d.frame, 0, this.canvas.height);\n\t\tct.fillText(\"onover:\" + (s.onover ? s.onover.GID: \"null\") + \" onfocus:\" + (s.onfocus ? s.onfocus.GID: \"null\"), 0, this.canvas.height - 20);\n\t\tct.strokeStyle = \"red\";\n\t\tct.globalCompositeOperation = \"source-over\";\n\t\tct.moveTo(x, y + 6);\n\t\tct.lineTo(x, y - 6);\n\t\tct.moveTo(x - 6, y);\n\t\tct.lineTo(x + 6, y);\n\t\tct.stroke();\n\t\tct.restore();\n\t}\n\n\tdrawGraph(g,mode=0){\n\t\tif(g.style.hidden===true)return;\n\t\tconst \tct=this.context,\n\t\t\t\tstyle=g.style,\n\t\t\t\tM=style._tempMat;\n\t\tthis.debug.count++;\n\t\tct.save();\n\t\tif(mode===0){\n\t\t\tct.globalCompositeOperation = style.composite;\n\t\t\tct.globalAlpha = style.opacity;\n\t\t}\n\t\t//position & offset\n\t\tM.set(style.positionMatrix);\n\t\tif(style.beforeMatrix)M.rightMultiply(style.beforeMatrix);\n\t\tif((style.rotate%360)!==0)M.rightMultiply(style.rotateMatrix);\n\t\tif(style.zoomX!==1 || style.zoomY!==1)M.rightMultiply(style.zoomMatrix);\n\t\tif(style.afterMatrix)M.rightMultiply(style.afterMatrix);\n\t\t\n\t\t//if(style.zoomX!==1 || style.zoomY!==1)M.leftMultiply(style.zoomMatrix);\n\t\t\n\t\tct.transform(M[0],M[3],M[1],M[4],M[2],M[5]);\n\t\tif(this.debug.switch && mode===0){\n\t\t\tct.save();\n\t\t\tct.beginPath();\n\t\t\tct.globalAlpha=0.5;\n\t\t\tct.globalCompositeOperation = 'source-over';\n\t\t\tct.strokeStyle=style.debugBorderColor;\n\t\t\tct.strokeWidth=1.5;\n\t\t\tct.strokeRect(0,0,style.width,style.height);\n\t\t\tct.strokeWidth=1;\n\t\t\tct.globalAlpha=1;\n\t\t\tct.strokeStyle='green';\n\t\t\tct.strokeRect(style.positionPointX-5,style.positionPointY-5,10,10);\n\t\t\tct.strokeStyle='blue';\n\t\t\tct.strokeRect(style.rotatePointX-4,style.rotatePointX-4,8,8);\n\t\t\tct.strokeStyle='olive';\n\t\t\tct.strokeRect(style.zoomPointX-3,style.zoomPointX-3,6,6);\n\t\t\tct.strokeStyle='#6cf';\n\t\t\tct.strokeRect(style.skewPointX-2,style.skewPointX-2,4,4);\n\t\t\tct.restore();\n\t\t}\n\t\tif(style.clipOverflow){\n\t\t\tct.beginPath();\n\t\t\tct.rect(0,0,style.width,style.height);\n\t\t\tct.clip();\n\t\t}\n\t\tif(mode===0){\n\t\t\tg.drawer&&g.drawer(ct);\n\t\t}else if(mode===1){\n\t\t\tg.checkIfOnOver(true,mode);\n\t\t}\n\t\tfor(let i=0;i<g.childNodes.length;i++)\n\t\t\tthis.drawGraph(g.childNodes[i],mode);\n\t\tct.restore();\n\t}\n}\n\nconst COL_Class={\n\tEvent:host=>{\n\t\tconst COL=host;\n\t\treturn class Event{\n\t\t\tconstructor(type){\n\t\t\t\tthis.type=type;\n\t\t\t\tthis.timeStamp=Date.now();\n\t\t\t}\n\t\t}\n\t},\n\tGraphEvent:host=>{\n\t\tconst COL=host;\n\t\treturn class GraphEvent extends host.class.Event{\n\t\t\tconstructor(type){\n\t\t\t\tsuper(type);\n\t\t\t\tthis.propagation=true;\n\t\t\t\tthis.stoped=false;\n\t\t\t\tthis.target=null;\n\t\t\t}\n\t\t\tstopPropagation(){\n\t\t\t\tthis.propagation=false;\n\t\t\t}\n\t\t\tstopImmediatePropagation(){\n\t\t\t\tthis.stoped=true;\n\t\t\t}\n\t\t\tget altKey(){return this.origin.altKey;}\n\t\t\tget ctrlKey(){return this.origin.ctrlKey;}\n\t\t\tget metaKey(){return this.origin.metaKey;}\n\t\t\tget shiftKey(){return this.origin.shiftKey;}\n\t\t}\n\t},\n\tMouseEvent:host=>{\n\t\treturn class MouseEvent extends host.class.GraphEvent{\n\t\t\tget button(){return this.origin.button;}\n\t\t\tget buttons(){return this.origin.buttons;}\n\t\t\tget movementX(){return host.stat.mouse.x-host.stat.previousX;}\n\t\t\tget movementY(){return host.stat.mouse.y-host.stat.previousY;}\n\n\t\t}\n\t},\n\tWheelEvent:host=>{\n\t\treturn class WheelEvent extends host.class.MouseEvent{\n\t\t\tget deltaX(){return this.origin.deltaX;}\n\t\t\tget deltaY(){return this.origin.deltaY;}\n\t\t\tget deltaZ(){return this.origin.deltaZ;}\n\t\t\tget deltaMode(){return this.origin.deltaMode;}\n\t\t}\n\t},\n\tKeyboardEvent:host=>{\n\t\treturn class KeyboardEvent extends host.class.GraphEvent{\n\t\t\tget key(){return this.origin.key;}\n\t\t\tget code(){return this.origin.code;}\n\t\t\tget repeat(){return this.origin.repeat;}\n\t\t\tget keyCode(){return this.origin.keyCode;}\n\t\t\tget charCode(){return this.origin.charCode;}\n\t\t\tget location(){return this.origin.location;}\n\t\t}\n\t},\n\tGraphEventEmitter:host=>{\n\t\tconst COL=host;\n\t\treturn class GraphEventEmitter{\n\t\t\tconstructor(){\n\t\t\t\tthis._events={};\n\t\t\t}\n\t\t\temit(e){\n\t\t\t\tif(e instanceof host.class.Event === false)return;\n\t\t\t\te.target=this;\n\t\t\t\tthis._resolve(e);\n\t\t\t}\n\t\t\t_resolve(e){\n\t\t\t\tif(e.type in this._events){\n\t\t\t\t\tconst hs=this._events[e.type];\n\t\t\t\t\ttry{\n\t\t\t\t\t\tfor(let i=0;i<hs.length;i++){\n\t\t\t\t\t\t\ths[i].call(this,e);\n\t\t\t\t\t\t\tif(e.stoped)return;\n\t\t\t\t\t\t}\n\t\t\t\t\t}catch(e){\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(e.propagation===true && this.parentNode)this.parentNode._resolve(e);\n\t\t\t}\n\t\t\ton(name,handle){\n\t\t\t\tif(!(handle instanceof Function))return;\n\t\t\t\tif(!(name in this._events))this._events[name]=[];\n\t\t\t\tthis._events[name].push(handle);\n\t\t\t}\n\t\t\tremoveEvent(name,handle){\n\t\t\t\tif(!(name in this._events))return;\n\t\t\t\tif(arguments.length===1){delete this._events[name];return;}\n\t\t\t\tlet ind;\n\t\t\t\tif(ind=(this._events[name].indexOf(handle))>=0)this._events[name].splice(ind,1);\n\t\t\t\tif(this._events[name].length===0)delete this._events[name];\n\t\t\t}\n\t\t}\n\t},\n\tGraphStyle:host=>{\n\t\treturn class GraphStyle{\n\t\t\tconstructor(inhertFrom){\n\t\t\t\tif(!(inhertFrom && this.inhert(inhertFrom)))\n\t\t\t\t\tthis.__proto__.__proto__=host.default.style;\n\t\t\t\tthis.positionMatrix=Mat.Identity(3);\n\t\t\t\tthis.zoomMatrix=Mat.Identity(3);\n\t\t\t\tthis.rotateMatrix=Mat.Identity(3);\n\t\t\t\tthis.beforeMatrix=null;\n\t\t\t\tthis.afterMatrix=null;\n\t\t\t}\n\t\t\tinhertGraph(graph){//inhert a graph's style\n\t\t\t\tif(!(graph instanceof host.class.Graph))\n\t\t\t\t\tthrow(new TypeError('graph is not a Graph instance'));\n\t\t\t\tthis.inhertStyle(graph.style);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tinhertStyle(style){\n\t\t\t\tif(!(style instanceof host.class.GraphStyle))\n\t\t\t\t\tthrow(new TypeError('graph is not a Graph instance'));\n\t\t\t\tthis.__proto__=style;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tinhert(from){\n\t\t\t\tif(from instanceof host.class.Graph){\n\t\t\t\t\tthis.inhertGraph(from);\n\t\t\t\t\treturn true;\n\t\t\t\t}else if(from instanceof host.class.GraphStyle){\n\t\t\t\t\tthis.inhertStyle(from);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tcancelInhert(){\n\t\t\t\tthis.__proto__=Object.prototype;\n\t\t\t}\n\n\t\t\tgetPoint(name){\n\t\t\t\tswitch(name){\n\t\t\t\t\tcase 'center':{\n\t\t\t\t\t\treturn [this.width / 2,this.height / 2];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn [0,0];\n\t\t\t}\n\t\t\tsize(w,h){\n\t\t\t\tthis.width = w;\n\t\t\t\tthis.height = h;\n\t\t\t}\n\t\t\tposition(x,y){\n\t\t\t\tthis.x=x;\n\t\t\t\tthis.y=y;\n\t\t\t\tthis.calcMatrix(0x1);\n\t\t\t}\n\t\t\tzoom(x,y){\n\t\t\t\tif (arguments.length == 1) {\n\t\t\t\t\tthis.zoomX = this.zoomY = x;\n\t\t\t\t}else{\n\t\t\t\t\tthis.zoomX = x;\n\t\t\t\t\tthis.zoomY = y;\n\t\t\t\t}\n\t\t\t\tthis.calcMatrix(0x100);\n\t\t\t}\n\t\t\tsetRotate(d){\n\t\t\t\tthis.rotate=d;\n\t\t\t\tthis.calcMatrix(0x10);\n\t\t\t}\n\t\t\tsetRotatePoint(x,y){\n\t\t\t\tif (arguments.length == 2) {\n\t\t\t\t\tthis.rotatePointX = x;\n\t\t\t\t\tthis.rotatePointY = y;\n\t\t\t\t} else if (arguments.length == 1) {\n\t\t\t\t\t[this.rotatePointX,this.rotatePointY]=this.getPoint(x);\n\t\t\t\t}\n\t\t\t\tthis.calcMatrix(0x10);\n\t\t\t}\n\t\t\tsetPositionPoint(x,y){\n\t\t\t\tif (arguments.length == 2) {\n\t\t\t\t\tthis.positionPointX = x;\n\t\t\t\t\tthis.positionPointY = y;\n\t\t\t\t} else if (arguments.length == 1) {\n\t\t\t\t\t[this.positionPointX,this.positionPointY]=this.getPoint(x);\n\t\t\t\t}\n\t\t\t\tthis.calcMatrix(0x1);\n\t\t\t}\n\t\t\tsetZoomPoint(x,y){\n\t\t\t\tif (arguments.length == 2) {\n\t\t\t\t\tthis.zoomPointX = x;\n\t\t\t\t\tthis.zoomPointY = y;\n\t\t\t\t} else if (arguments.length == 1) {\n\t\t\t\t\t[this.zoomPointX,this.zoomPointY]=this.getPoint(x);\n\t\t\t\t}\n\t\t\t\tthis.calcMatrix(0x100);\n\t\t\t}\n\t\t\tcalcMatrix(type){\n\t\t\t\tif((type&0x1) === 0x1){//position\n\t\t\t\t\tthis.positionMatrix[2]=this.x-this.positionPointX;\n\t\t\t\t\tthis.positionMatrix[5]=this.y-this.positionPointY;\n\t\t\t\t}\n\t\t\t\tif((type&0x10) === 0x10){//rotate\n\t\t\t\t\tconst r=this.rotateMatrix,\n\t\t\t\t\t\t\ts=Math.sin(this.rotate* 0.0174532925),\n\t\t\t\t\t\t\tc=Math.cos(this.rotate* 0.0174532925);\n\t\t\t\t\tr[4]=r[0]=c;\n\t\t\t\t\tr[1]=-(r[3]=s);\n\t\t\t\t\tr[2]=(1-c)*this.rotatePointX+s*this.rotatePointY;\n\t\t\t\t\tr[5]=(1-c)*this.rotatePointY-s*this.rotatePointX;\n\t\t\t\t}\n\t\t\t\tif((type&0x100) === 0x100){//zoom\n\t\t\t\t\tconst r=this.zoomMatrix;\n\t\t\t\t\tr[0]=this.zoomX;\n\t\t\t\t\tr[2]=(1-this.zoomX)*this.zoomPointX;\n\t\t\t\t\tr[4]=this.zoomY;\n\t\t\t\t\tr[5]=(1-this.zoomY)*this.zoomPointY;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tGraph:host=>{\n\t\treturn class Graph extends host.class.GraphEventEmitter{\n\t\t\tconstructor(){\n\t\t\t\tsuper();\n\t\t\t\t//this.name=name;\n\t\t\t\tthis.host=host;\n\t\t\t\tthis.GID=this.host.generateGraphID();\n\t\t\t\tthis.onoverCheck=true;\n\t\t\t\tObject.defineProperties(this,{\n\t\t\t\t\tstyle:{value: new host.class.GraphStyle(),configurable:true},\n\t\t\t\t\tchildNodes:{value: []},\n\t\t\t\t\tparentNode:{value: undefined,configurable:true}\n\t\t\t\t});\n\t\t\t}\n\t\t\tcreateShadow(){\n\t\t\t\tconst shadow=Object.create(this);\n\t\t\t\tshadow.GID=this.host.generateGraphID();\n\t\t\t\tshadow.shadowParent=this;\n\t\t\t\tObject.defineProperties(shadow,{\n\t\t\t\t\tstyle:{value: new host.class.GraphStyle(this.style),configurable:true},\n\t\t\t\t\tparentNode:{value: undefined,configurable:true}\n\t\t\t\t});\n\t\t\t\treturn shadow;\n\t\t\t}\n\t\t\t//add a graph to childNodes' end\n\t\t\tappendChild(graph){\n\t\t\t\tif(!(graph instanceof host.class.Graph))\n\t\t\t\t\tthrow(new TypeError('graph is not a Graph instance'));\n\t\t\t\tif(graph===this)throw(new Error('can not add myself as a child'));\n\t\t\t\tif(graph.parentNode!==this){\n\t\t\t\t\tdefProp(graph, 'parentNode', {\n\t\t\t\t\t\tvalue: this,\n\t\t\t\t\t});\n\t\t\t\t}else{\n\t\t\t\t\tlet i=this.findChild(graph);\n\t\t\t\t\tif(i>=0)this.childNodes.splice(i,1);\n\t\t\t\t}\n\t\t\t\tthis.childNodes.push(graph);\n\t\t\t}\n\t\t\t//insert this graph after the graph\n\t\t\tinsertAfter(graph){\n\t\t\t\tif(!(graph instanceof host.class.Graph))\n\t\t\t\t\tthrow(new TypeError('graph is not a Graph instance'));\n\t\t\t\tif(graph===this)throw(new Error('can not add myself as a child'));\n\t\t\t\tlet p=graph.parentNode,io,it;\n\t\t\t\tif(!p)throw(new Error('no parentNode'));\n\t\t\t\tit=p.findChild(graph);\n\t\t\t\t//if(it<0)return false;\n\t\t\t\tif(p!==this.parentNode){\n\t\t\t\t\tdefProp(this, 'parentNode', {\n\t\t\t\t\t  value: p,\n\t\t\t\t\t});\n\t\t\t\t}else{\n\t\t\t\t\tio=p.findChild(this);\n\t\t\t\t\tif(io>=0)p.childNodes.splice(io,1);\n\t\t\t\t}\n\t\t\t\tp.childNodes.splice((io<it)?it:it+1,0,this);\n\t\t\t}\n\t\t\t//insert this graph before the graph\n\t\t\tinsertBefore(graph){\n\t\t\t\tif(!(graph instanceof host.class.Graph))\n\t\t\t\t\tthrow(new TypeError('graph is not a Graph instance'));\n\t\t\t\tif(graph===this)throw(new Error('can not add myself as a child'));\n\t\t\t\tlet p=graph.parentNode,io,it;\n\t\t\t\tif(!p)throw(new Error('no parentNode'));\n\t\t\t\tit=p.findChild(graph);\n\t\t\t\t//if(it<0)return false;\n\t\t\t\tif(p!==this.parentNode){\n\t\t\t\t\tdefProp(this, 'parentNode', {\n\t\t\t\t\t  value: p,\n\t\t\t\t\t});\n\t\t\t\t}else{\n\t\t\t\t\tio=p.findChild(this);\n\t\t\t\t\tif(io>=0)p.childNodes.splice(io,1);\n\t\t\t\t}\n\t\t\t\tp.childNodes.splice((io<it)?it-1:it,0,this);\n\t\t\t}\n\t\t\tfindChild(graph){\n\t\t\t\tfor(let i=this.childNodes.length;i--;)\n\t\t\t\t\tif(this.childNodes[i]===graph)return i;\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tremoveChild(graph){\n\t\t\t\tlet i=this.findChild(graph);\n\t\t\t\tif(i<0)return;\n\t\t\t\tthis.childNodes.splice(i,1);\n\t\t\t\tdefProp(this, 'parentNode', {\n\t\t\t\t  value: undefined,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcheckIfOnOver(runHitRange=true,mode=0){\n\t\t\t\tif(this.onoverCheck===false || !this.hitRange)return false;\n\t\t\t\tconst m=this.host.stat.mouse;\n\t\t\t\tif(m.x === null)return false;\n\t\t\t\tif(this===this.host.tmp.onOverGraph)return true;\n\t\t\t\trunHitRange&&this.hitRange(this.host.context);\n\t\t\t\tif(mode===0 && this.host.debug.switch){\n\t\t\t\t\tthis.host.context.save();\n\t\t\t\t\tthis.host.context.strokeStyle='yellow';\n\t\t\t\t\tthis.host.context.stroke();\n\t\t\t\t\tthis.host.context.restore();\n\t\t\t\t}\n\t\t\t\tif(this.host.context.isPointInPath(m.x,m.y)){\n\t\t\t\t\tthis.host.tmp.onOverGraph=this;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdelete(){//remove it from the related objects\n\t\t\t\tif(this.parentNode)this.parentNode.removeChild(this);\n\t\t\t\tif(this.host.stat.onover===this)this.host.stat.onover=null;\n\t\t\t\tif(this.host.stat.onfocus===this)this.host.stat.onfocus=null;\n\t\t\t}\n\t\t}\n\t\t\n\t},\n\tFunctionGraph:host=>{\n\t\treturn class FunctionGraph extends host.class.Graph{\n\t\t\tconstructor(drawer){\n\t\t\t\tsuper();\n\t\t\t\tif(drawer instanceof Function){\n\t\t\t\t\tthis.drawer=drawer;\n\t\t\t\t}\n\t\t\t\tthis.style.debugBorderColor='#f00';\n\t\t\t}\n\t\t\tdrawer(ct){\n\t\t\t\t//onover point check\n\t\t\t\tthis.checkIfOnOver(true);\n\t\t\t}\n\t\t\thitRange(ct){\n\t\t\t\tct.beginPath();\n\t\t\t\tct.rect(0,0,this.style.width,this.style.height);\n\t\t\t}\n\t\t}\n\t},\n\tImageGraph:host=>{\n\t\treturn class ImageGraph extends host.class.FunctionGraph{\n\t\t\tconstructor(image){\n\t\t\t\tsuper();\n\t\t\t\tif(image)this.use(image);\n\t\t\t\tthis.useImageBitmap=true;\n\t\t\t\tthis.style.debugBorderColor='#0f0';\n\t\t\t}\n\t\t\tuse(image){\n\t\t\t\tif(image instanceof Image){\n\t\t\t\t\tthis.image=image;\n\t\t\t\t\tif (!image.complete) {\n\t\t\t\t\t\timage.addEventListener('load',e=> {\n\t\t\t\t\t\t\tthis.resetStyleSize();\n\t\t\t\t\t\t\tthis._createBitmap();\n\t\t\t\t\t\t});\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.resetStyleSize();\n\t\t\t\t\t\tthis._createBitmap();\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}else if(image instanceof HTMLCanvasElement){\n\t\t\t\t\tthis.image=image;\n\t\t\t\t\tthis.resetStyleSize();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tthrow(new TypeError('Wrong image type'));\n\t\t\t}\n\t\t\t_createBitmap(){\n\t\t\t\tif(this.useImageBitmap && typeof createImageBitmap ==='function'){//use ImageBitmap\n\t\t\t\t\tcreateImageBitmap(this.image).then((bitmap)=>{\n\t\t\t\t\t\tif(this._bitmap)this._bitmap.close();\n\t\t\t\t\t\tthis._bitmap=bitmap;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tget width(){\n\t\t\t\tif(this.image instanceof Image)return this.image.naturalWidth;\n\t\t\t\tif(this.image instanceof HTMLCanvasElement)return this.image.width;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tget height(){\n\t\t\t\tif(this.image instanceof Image)return this.image.naturalHeight;\n\t\t\t\tif(this.image instanceof HTMLCanvasElement)return this.image.height;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tresetStyleSize(){\n\t\t\t\tthis.style.width=this.width;\n\t\t\t\tthis.style.height=this.height;\n\t\t\t}\n\t\t\tdrawer(ct){\n\t\t\t\t//onover point check\n\t\t\t\t//ct.beginPath();\n\t\t\t\tct.drawImage((this.useImageBitmap&&this._bitmap)?this._bitmap:this.image, 0, 0);\n\t\t\t\tthis.checkIfOnOver(true);\n\t\t\t}\n\t\t\thitRange(ct){\n\t\t\t\tct.beginPath();\n\t\t\t\tct.rect(0,0,this.style.width,this.style.height);\n\t\t\t}\n\t\t}\n\t},\n\tCanvasGraph:host=>{\n\t\treturn class CanvasGraph extends host.class.ImageGraph{\n\t\t\tconstructor(){\n\t\t\t\tsuper();\n\t\t\t\tthis.image=document.createElement('canvas');\n\t\t\t\tthis.context=this.image.getContext('2d');\n\t\t\t\tthis.useImageBitmap=false;\n\t\t\t\tthis.autoClear=true;\n\t\t\t}\n\t\t\tdraw(func){\n\t\t\t\tif(this.autoClear)this.context.clearRect(0,0,this.width,this.height);\n\t\t\t\tfunc(this.context,this.canvas);\n\t\t\t\tif(this.useImageBitmap)this._createBitmap();\n\t\t\t}\n\t\t\tset width(w){this.image.width=w;}\n\t\t\tset height(h){this.image.height=h;}\n\t\t}\n\t},\n\tTextGraph:host=>{\n\t\treturn class TextGraph extends host.class.FunctionGraph{\n\t\t\tconstructor(text=''){\n\t\t\t\tsuper();\n\t\t\t\t//this._cache=null;\n\t\t\t\tthis._fontString='';\n\t\t\t\tthis._renderList=null;\n\t\t\t\tthis.autoSize=true;\n\t\t\t\tthis.font=Object.create(host.default.font);\n\t\t\t\tthis.realtimeRender=false;\n\t\t\t\tthis.useImageBitmap=true;\n\t\t\t\tthis.style.debugBorderColor='#00f';\n\t\t\t\tthis.text=text;\n\t\t\t\tthis._renderToCache=this._renderToCache.bind(this);\n\t\t\t\tdefProp(this,'_cache',{configurable:true});\n\t\t\t}\n\t\t\tprepare(async=false){//prepare text details\n\t\t\t\tif(!this._cache && !this.realtimeRender){\n\t\t\t\t\tdefProp(this,'_cache',{value:document.createElement(\"canvas\")});\n\t\t\t\t}\n\t\t\t\tlet font = \"\";\n\t\t\t\t(this.font.fontStyle)&&(font = this.font.fontStyle);\n\t\t\t\t(this.font.fontVariant)&&(font =`${font} ${this.font.fontVariant}`);\n\t\t\t\t(this.font.fontWeight)&&(font =`${font} ${this.font.fontWeight}`);\n\t\t\t\tfont =`${font} ${this.font.fontSize}px`;\n\t\t\t\t(this.font.fontFamily)&&(font =`${font} ${this.font.fontFamily}`);\n\t\t\t\tthis._fontString = font;\n\n\t\t\t\tif(this.realtimeRender)return;\n\t\t\t\tconst imgobj = this._cache,ct = (imgobj.ctx2d||(imgobj.ctx2d=imgobj.getContext(\"2d\")));\n\t\t\t\tct.font = font;\n\t\t\t\tthis._renderList = this.text.split(/\\n/g);\n\t\t\t\tthis.estimatePadding=Math.max(\n\t\t\t\t\tthis.font.shadowBlur+5+Math.max(Math.abs(this.font.shadowOffsetY),Math.abs(this.font.shadowOffsetX)),\n\t\t\t\t\tthis.font.strokeWidth+3\n\t\t\t\t);\n\t\t\t\tif (this.autoSize) {\n\t\t\t\t\tlet w = 0,tw,lh=(typeof this.font.lineHeigh ==='number')?this.font.lineHeigh:this.font.fontSize;\n\t\t\t\t\tfor (let i = this._renderList.length; i -- ;) {\n\t\t\t\t\t\ttw = ct.measureText(this._renderList[i]).width;\n\t\t\t\t\t\t(tw>w)&&(w=tw);//max\n\t\t\t\t\t}\n\t\t\t\t\timgobj.width = (this.style.width = w) + this.estimatePadding*2;\n\t\t\t\t\timgobj.height = (this.style.height = this._renderList.length * lh)+ ((lh<this.font.fontSize)?this.font.fontSize*2:0) + this.estimatePadding*2;\n\t\t\t\t} else {\n\t\t\t\t\timgobj.width = this.style.width;\n\t\t\t\t\timgobj.height = this.style.height;\n\t\t\t\t}\n\t\t\t\tct.translate(this.estimatePadding, this.estimatePadding);\n\t\t\t\tif(async){\n\t\t\t\t\trequestIdleCallback(this._renderToCache);\n\t\t\t\t}else{\n\t\t\t\t\tthis._renderToCache();\n\t\t\t\t}\n\t\t\t}\n\t\t\t_renderToCache(){\n\t\t\t\tthis.render(this._cache.ctx2d);\n\t\t\t\tif(this.useImageBitmap && typeof createImageBitmap ==='function'){//use ImageBitmap\n\t\t\t\t\tcreateImageBitmap(this._cache).then((bitmap)=>{\n\t\t\t\t\t\tif(this._bitmap)this._bitmap.close();\n\t\t\t\t\t\tthis._bitmap=bitmap;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\trender(ct){//render text\n\t\t\t\tif(!this._renderList)return;\n\t\t\t\tct.save();\n\t\t\t\tct.font=this._fontString;//set font\n\t\t\t\tct.textBaseline = 'top';\n\t\t\t\tct.lineWidth = this.font.strokeWidth;\n\t\t\t\tct.fillStyle = this.font.color;\n\t\t\t\tct.strokeStyle = this.font.strokeColor;\n\t\t\t\tct.shadowBlur = this.font.shadowBlur;\n\t\t\t\tct.shadowColor= this.font.shadowColor;\n\t\t\t\tct.shadowOffsetX = this.font.shadowOffsetX;\n\t\t\t\tct.shadowOffsetY = this.font.shadowOffsetY;\n\t\t\t\tct.textAlign = this.font.textAlign;\n\t\t\t\tlet lh=(typeof this.font.lineHeigh ==='number')?this.font.lineHeigh:this.font.fontSize,\n\t\t\t\t\tx;\n\t\t\t\tswitch(this.font.textAlign){\n\t\t\t\t\tcase 'left':case 'start':{\n\t\t\t\t\t\tx=0;break;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'center':{\n\t\t\t\t\t\tx=this.style.width/2;break;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'right':case 'end':{\n\t\t\t\t\t\tx=this.style.width;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = this._renderList.length;i--;) {\n\t\t\t\t\tthis.font.strokeWidth&&ct.strokeText(this._renderList[i],x,lh*i);\n\t\t\t\t\tthis.font.fill&&ct.fillText(this._renderList[i],x, lh*i);\n\t\t\t\t}\n\t\t\t\tct.restore();\n\t\t\t}\n\t\t\tdrawer(ct){\n\t\t\t\t//ct.beginPath();\n\t\t\t\tif(this.realtimeRender){//realtime render the text\n\t\t\t\t\t//onover point check\n\t\t\t\t\tthis.checkIfOnOver(true);\n\t\t\t\t\tthis.render(ct);\n\t\t\t\t}else{//draw the cache\n\t\t\t\t\tif(!this._cache){\n\t\t\t\t\t\tthis.prepare();\n\t\t\t\t\t}\n\t\t\t\t\tct.drawImage((this.useImageBitmap&&this._bitmap)?this._bitmap:this._cache, -this.estimatePadding, -this.estimatePadding);\n\t\t\t\t\tthis.checkIfOnOver(true);\n\t\t\t\t}\n\t\t\t}\n\t\t\thitRange(ct){\n\t\t\t\tct.beginPath();\n\t\t\t\tct.rect(0,0,this.style.width,this.style.height);\n\t\t\t}\n\t\t}\n\t},\n}\n\n\nfunction addEvents(target,events={}){\n\tfor(let e in events)target.addEventListener(e,events[e]);\n}\n\nfunction multiplyMatrix(m1,m2,r) {\n\tr[0]=m1[0]*m2[0]+m1[1]*m2[3];\n\tr[1]=m1[0]*m2[1]+m1[1]*m2[4];\n\tr[2]=m1[0]*m2[2]+m1[1]*m2[5]+m1[2];\n\tr[3]=m1[3]*m2[0]+m1[4]*m2[3];\n\tr[4]=m1[3]*m2[1]+m1[4]*m2[4];\n\tr[5]=m1[3]*m2[2]+m1[4]*m2[5]+m1[5];\n}\n\n\n//code from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nif (typeof Object.assign != 'function')\nObject.assign = function (target) {\n\t'use strict';\n\t// We must check against these specific cases.\n\tif (target === undefined || target === null) {\n\t\tthrow new TypeError('Cannot convert undefined or null to object');\n\t}\n\tvar output = Object(target);\n\tfor (var index = 1; index < arguments.length; index++) {\n\t\tvar source = arguments[index];\n\t\tif (source !== undefined && source !== null) {\n\t\t\tfor (var nextKey in source) {\n\t\t\t\tif (source.hasOwnProperty(nextKey)) {\n\t\t\t\t\toutput[nextKey] = source[nextKey];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn output;\n};\n\n\nif(!Float32Array.__proto__.from) {\n\tlet copy_data = [];\n\tFloat32Array.__proto__.from = function (obj, func, thisObj) {\n\t\tvar typedArrayClass = Float32Array.__proto__;\n\t\tif(typeof this !== \"function\")\n\t\t\tthrow new TypeError(\"# is not a constructor\");\n\t\tif(this.__proto__ !== typedArrayClass)\n\t\t\tthrow new TypeError(\"this is not a typed array.\");\n\t\tfunc = func || (elem=>{return elem;});\n\t\tif (typeof func !== \"function\")\n\t\t\tthrow new TypeError(\"specified argument is not a function\");\n\t\tobj = Object(obj);\n\t\tif(!obj[\"length\"])\n\t\t\treturn new this(0);\n\t\tcopy_data.length=0;\n\t\tfor(let i=0; i<obj.length; i++){\n\t\t\tcopy_data.push(obj[i]);\n\t\t}\n\t\tcopy_data = copy_data.map(func, thisObj);\n\t\tconst typed_array = new this(copy_data.length);\n\t\tfor(let i=0; i<typed_array.length; i++) {\n\t\t\ttyped_array[i] = copy_data[i];\n\t\t}\n\t\treturn typed_array;\n\t}\n}\n\n\n(function() {\n\tif(window.requestAnimationFrame)return;\n\tvar lastTime = 0;\n\tvar vendors = ['ms', 'moz', 'webkit', 'o'];\n\tfor (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n\t\twindow.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n\t\twindow.cancelRequestAnimationFrame = window[vendors[x] + 'CancelRequestAnimationFrame'];\n\t} \n\tif (!window.requestAnimationFrame) window.requestAnimationFrame = function(callback, element, interval) {\n\t\tvar currTime = Date.now();\n\t\tvar timeToCall = interval || (Math.max(0, 1000 / 60 - (currTime - lastTime)));\n\t\tcallback(0);\n\t\tvar id = window.setTimeout(function() {\n\t\t\tcallback(currTime + timeToCall);\n\t\t},\n\t\ttimeToCall);\n\t\tlastTime = currTime + timeToCall;\n\t\treturn id;\n\t};\n\tif (!window.cancelAnimationFrame) window.cancelAnimationFrame = function(id) {\n\t\tclearTimeout(id);\n\t};\n}());\n\nconst requestIdleCallback=window.requestIdleCallback||setImmediate;\n\nexport default CanvasObjLibrary;\nexport {CanvasObjLibrary,requestIdleCallback}\n","import CanvasObjLibrary from './CanvasObjLibrary.js';\n\nif(!window.CanvasObjLibrary)window.CanvasObjLibrary = CanvasObjLibrary;","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}